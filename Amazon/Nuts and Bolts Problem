class Solution{
public:	
    
    int partition( char arr[], int low, int high, char pivot){
        int i = low;
        
        for(int j=low; j<high;j++){
            if(arr[j]<pivot)
                swap(arr[i++],arr[j]);
            else if(arr[j]==pivot)
                swap(arr[j--],arr[high]);
        }
        swap(arr[i],arr[high]);
        return i;
    }
    
    void matchPairs(char nuts[], char bolts[], int low, int high){
        if(low<high){
            int pivot = partition(nuts,low,high,bolts[high]);
            partition(bolts,low,high,nuts[pivot]);
            matchPairs(nuts,bolts,low,pivot-1);
            matchPairs(nuts,bolts,pivot+1,high);
        }
    }

	void matchPairs(char nuts[], char bolts[], int n) {
	    // code here
	    matchPairs(nuts,bolts,0,n-1);
	}

};
