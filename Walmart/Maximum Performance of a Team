class Solution {
public:
    int maxPerformance(int n, vector<int>& s, vector<int>& e, int k) {
        vector<pair<int,int>> es(n);
        for(int i=0;i<n;i++)
            es[i] = {e[i],s[i]};
        sort(rbegin(es),rend(es));
        long sumS=0,res=0;
        priority_queue<int,vector<int>,greater<int>> pq;
        for(auto &[e,s]:es){
            //e is efficieny
            //s is speed
            pq.push(s);
            sumS += s;
            if(pq.size()>k){
                sumS -= pq.top();
                pq.pop();
            }
            res = max(res, sumS * e);
        }
        return res % (int)(1e9+7);
    }
};
